{"version":3,"file":"index.mjs","sources":["../lib/accessors.js","../lib/main.js","../lib/ndarray.js","../lib/index.js"],"sourcesContent":["\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math-base-special-floor' );\n\n\n// MAIN //\n\n/**\n* Reverses a strided array in-place.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Function} x.set - setter\n* @param {integer} stride - index increment\n* @param {NonNegativeInteger} offset - starting index\n* @returns {Object} input array object\n*\n* @example\n* var Complex64Array = require( '@stdlib/array-complex64' );\n* var Complex64 = require( '@stdlib/complex-float32' );\n* var reinterpret64 = require( '@stdlib/strided-base-reinterpret-complex64' );\n*\n* function setter( data, idx, value ) {\n*     data.set( value, idx );\n* }\n*\n* function getter( data, idx ) {\n*     return data.get( idx );\n* }\n*\n* var data = new Complex64Array( [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ] );\n*\n* var x = {\n*     'data': data,\n*     'setter': setter,\n*     'getter': getter\n* };\n*\n* grev( data.length, x, 1, 0 );\n*\n* var view = reinterpret64( x.data, 0 );\n* // view => <Float32Array>[ -1.0, -3.0, 4.0, 0.0, 3.0, -5.0, -2.0, 1.0 ]\n*/\nfunction grev( N, x, stride, offset ) {\n\tvar xbuf;\n\tvar set;\n\tvar get;\n\tvar tmp;\n\tvar ix;\n\tvar iy;\n\tvar n;\n\tvar i;\n\n\t// Cache reference to array data:\n\txbuf = x.data;\n\n\t// Cache a reference to the element accessors:\n\tset = x.setter;\n\tget = x.getter;\n\n\tn = floor( N/2 );\n\tix = offset;\n\tiy = ix + ((N-1)*stride);\n\tfor ( i = 0; i < n; i++ ) {\n\t\ttmp = get( xbuf, ix );\n\t\tset( xbuf, ix, get( xbuf, iy ) );\n\t\tset( xbuf, iy, tmp );\n\t\tix += stride;\n\t\tiy -= stride;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = grev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// VARIABLES //\n\nvar M = 3;\n\n\n// MAIN //\n\n/**\n* Reverses a strided array in-place.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - index increment\n* @returns {NumericArray} input array\n*\n* @example\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* grev( x.length, x, 1 );\n* // x => [ -3.0, -1.0, 0.0, 4.0, -5.0, 3.0, 1.0, -2.0 ]\n*/\nfunction grev( N, x, stride ) {\n\tvar tmp;\n\tvar ix;\n\tvar iy;\n\tvar o;\n\tvar m;\n\tvar n;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn x;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessors ) {\n\t\tif ( stride < 0 ) {\n\t\t\tix = (1-N) * stride;\n\t\t} else {\n\t\t\tix = 0;\n\t\t}\n\t\taccessors( N, o, stride, ix );\n\t\treturn o.data;\n\t}\n\tn = floor( N/2 );\n\n\t// Use loop unrolling if the stride is equal to `1`...\n\tif ( stride === 1 ) {\n\t\tm = n % M;\n\t\tiy = N - 1;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( ix = 0; ix < m; ix++ ) {\n\t\t\t\ttmp = x[ ix ];\n\t\t\t\tx[ ix ] = x[ iy ];\n\t\t\t\tx[ iy ] = tmp;\n\t\t\t\tiy -= 1;\n\t\t\t}\n\t\t}\n\t\tif ( n < M ) {\n\t\t\treturn x;\n\t\t}\n\t\tfor ( ix = m; ix < n; ix += M ) {\n\t\t\ttmp = x[ ix ];\n\t\t\tx[ ix ] = x[ iy ];\n\t\t\tx[ iy ] = tmp;\n\n\t\t\ttmp = x[ ix+1 ];\n\t\t\tx[ ix+1 ] = x[ iy-1 ];\n\t\t\tx[ iy-1 ] = tmp;\n\n\t\t\ttmp = x[ ix+2 ];\n\t\t\tx[ ix+2 ] = x[ iy-2 ];\n\t\t\tx[ iy-2 ] = tmp;\n\n\t\t\tiy -= M;\n\t\t}\n\t\treturn x;\n\t}\n\tif ( stride < 0 ) {\n\t\tix = (1-N) * stride;\n\t} else {\n\t\tix = 0;\n\t}\n\tiy = ix + ((N-1)*stride);\n\tfor ( i = 0; i < n; i++ ) {\n\t\ttmp = x[ ix ];\n\t\tx[ ix ] = x[ iy ];\n\t\tx[ iy ] = tmp;\n\t\tix += stride;\n\t\tiy -= stride;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = grev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar accessors = require( './accessors.js' );\n\n\n// VARIABLES //\n\nvar M = 3;\n\n\n// MAIN //\n\n/**\n* Reverses a strided array in-place.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - index increment\n* @param {NonNegativeInteger} offset - starting index\n* @returns {NumericArray} input array\n*\n* @example\n* var x = [ 1.0, -2.0, 3.0, -4.0, 5.0, -6.0 ];\n*\n* grev( 3, x, 1, x.length-3 );\n* // x => [ 1.0, -2.0, 3.0, -6.0, 5.0, -4.0 ]\n*/\nfunction grev( N, x, stride, offset ) {\n\tvar tmp;\n\tvar ix;\n\tvar iy;\n\tvar o;\n\tvar m;\n\tvar n;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn x;\n\t}\n\to = arraylike2object( x );\n\tif ( o.accessors ) {\n\t\taccessors( N, o, stride, offset );\n\t\treturn o.data;\n\t}\n\tn = floor( N/2 );\n\tix = offset;\n\n\t// Use loop unrolling if the stride is equal to `1`...\n\tif ( stride === 1 ) {\n\t\tm = n % M;\n\t\tiy = ix + N - 1;\n\n\t\t// If we have a remainder, run a clean-up loop...\n\t\tif ( m > 0 ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\ttmp = x[ ix ];\n\t\t\t\tx[ ix ] = x[ iy ];\n\t\t\t\tx[ iy ] = tmp;\n\t\t\t\tix += stride;\n\t\t\t\tiy -= stride;\n\t\t\t}\n\t\t}\n\t\tif ( n < M ) {\n\t\t\treturn x;\n\t\t}\n\t\tfor ( i = m; i < n; i += M ) {\n\t\t\ttmp = x[ ix ];\n\t\t\tx[ ix ] = x[ iy ];\n\t\t\tx[ iy ] = tmp;\n\n\t\t\ttmp = x[ ix+1 ];\n\t\t\tx[ ix+1 ] = x[ iy-1 ];\n\t\t\tx[ iy-1 ] = tmp;\n\n\t\t\ttmp = x[ ix+2 ];\n\t\t\tx[ ix+2 ] = x[ iy-2 ];\n\t\t\tx[ iy-2 ] = tmp;\n\n\t\t\tix += M;\n\t\t\tiy -= M;\n\t\t}\n\t\treturn x;\n\t}\n\tiy = ix + ((N-1)*stride);\n\tfor ( i = 0; i < n; i++ ) {\n\t\ttmp = x[ ix ];\n\t\tx[ ix ] = x[ iy ];\n\t\tx[ iy ] = tmp;\n\t\tix += stride;\n\t\tiy -= stride;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = grev;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Reverse a strided array in-place.\n*\n* @module @stdlib/blas-ext-base-grev\n*\n* @example\n* var grev = require( '@stdlib/blas-ext-base-grev' );\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* grev( x.length, x, 1 );\n* // x => [ -3.0, -1.0, 0.0, 4.0, -5.0, 3.0, 1.0, -2.0 ]\n*\n* @example\n* var grev = require( '@stdlib/blas-ext-base-grev' );\n*\n* var x = [ -2.0, 1.0, 3.0, -5.0, 4.0, 0.0, -1.0, -3.0 ];\n*\n* grev( x.length, x, 1, 0 );\n* // x => [ -3.0, -1.0, 0.0, 4.0, -5.0, 3.0, 1.0, -2.0 ]\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["floor","require$$0","accessors","N","x","stride","offset","xbuf","set","get","tmp","ix","iy","n","i","data","setter","getter","arraylike2object","require$$1","require$$2","main","o","m","ndarray","lib"],"mappings":"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"}